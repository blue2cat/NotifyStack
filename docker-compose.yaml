version: "3.9"

services:
  # RabbitMQ Broker
  rabbitmq:
    image: "rabbitmq:3-management"
    container_name: "rabbitmq"
    ports:
      - "5672:5672"  # AMQP protocol
      - "15672:15672"  # Management UI
    environment:
      RABBITMQ_DEFAULT_USER: {RABBITMQ_DEFAULT_USER}
      RABBITMQ_DEFAULT_PASS: {RABBITMQ_DEFAULT_PASS}
      RABBITMQ_DEFAULT_VHOST: {RABBITMQ_DEFAULT_VHOST}
    restart: always

  # Database
  database:
    image: "postgres:13"
    container_name: "notifystack_db"
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER

  # Default: Production Environment
  app:
    build:
      context: .
      target: prod
    container_name: "notifystack"
    ports:
      - "8000:8000"
    environment:
      FLASK_ENV: production
      BROKER_HOST: rabbitmq
      BROKER_PORT: 5672
    depends_on:
      - rabbitmq
    restart: always
    command: ["python", "main.py"]

  # Optional: Development Environment
  dev:
    build:
      context: .
      target: dev  # Use the dev stage from Dockerfile
    container_name: "notifystack_dev"
    volumes:
      - .:/app  # Mount the local directory for live reloading
    ports:
      - "8000:8000"
    environment:
      FLASK_ENV: development
      BROKER_HOST: rabbitmq
      BROKER_PORT: 5672
    depends_on:
      - rabbitmq
    command: ["python", "main.py"]
